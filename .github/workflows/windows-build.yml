name: build-windows

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      TAURI_SKIP_RELEASE_CHECK: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Bun runtime
        shell: powershell
        run: |
          irm https://bun.sh/install.ps1 | iex
          echo "$env:USERPROFILE\.bun\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Check Bun
        run: |
          bun --version
          where bun

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~\.cargo\registry
            ~\.cargo\git
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Cargo target
        uses: actions/cache@v4
        with:
          path: src-tauri\target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      - name: Install frontend dependencies
        run: bun install

      # 🚀 Tauri CLI v2 をローカルパスにインストール（PATH競合を回避）
      - name: Install local Tauri CLI v2
        run: |
          cargo install --locked tauri-cli --version "^2.0.0" --root $env:GITHUB_WORKSPACE
          echo "Installed Tauri CLI under $env:GITHUB_WORKSPACE\bin"

      # 🧾 CLI バージョン確認（確実に v2 を利用）
      - name: Check Tauri CLI version
        run: |
          Get-ChildItem $env:GITHUB_WORKSPACE\bin
          & "$env:GITHUB_WORKSPACE\bin\cargo-tauri.exe" --version

      # 🏗️ v2 正式ビルド（インストーラ付き／NSISターゲット）
      - name: Build Windows installer (.exe)
        run: |
          & "$env:GITHUB_WORKSPACE\bin\cargo-tauri.exe" build --bundles nsis

      # 💾 成果物をアップロード
      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: bomsynctool-installer
          path: src-tauri/target/release/bundle/nsis/*.exe
