name: build-windows

on:
  push:
    branches: [ main ]    # mainブランチへのpushで自動実行
  workflow_dispatch:       # 手動実行も許可

jobs:
  build:
    runs-on: windows-latest
    env:
      TAURI_SKIP_RELEASE_CHECK: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Bun runtime
        shell: powershell
        run: |
          irm https://bun.sh/install.ps1 | iex
          echo "$env:USERPROFILE\.bun\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Check Bun
        run: |
          bun --version
          where bun

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~\.cargo\registry
            ~\.cargo\git
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Cargo target
        uses: actions/cache@v4
        with:
          path: src-tauri\target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      - name: Install frontend dependencies
        run: bun install

      - name: Install Tauri CLI (Rust)
        run: cargo install --locked tauri-cli

      # 実行ファイル(.exe)をビルド（インストーラーなし）
      - name: Build Windows binary (.exe)
        run: cargo tauri build --bundles none

      # 成果物(.exe)をアップロード
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: bomsynctool-exe
          path: src-tauri/target/release/*.exe
